import random


def initlist(max):
    w = 0
    yt = []
    while w < max:
        a = random.randint(1, 6)
        yt.append(a)
        w = w + 1
    return yt


max = 30


def getmap():
    q = 0
    p = []
    while q < max:
        b = initlist(max)
        p.append(list(b))
        q = 1 + q
    return p


def geneanswer(i, j):
    result = []
    while i < max and j < max:
        t = random.randint(0, 1)
        if t == 1 and i <= max - 2:
            i = i + 1
        elif j <= max - 2:
            j = j + 1
        else:
            if t == 1:
                j = j + 1
            else:
                i = i + 1
        result.append((i, j))
    return result


print(geneanswer(12, 3))


# 答案是一个元组。元组的个数至少应该是 2*(max-1)，且有一定规律
def initanswer():
    o = 0
    i = j = 0
    result = []
    firststep = (0, 0)
    result.append(firststep)
    while o < 2 * (max - 1):
        t = random.randint(0, 1)
        if t == 1 and i <= max - 2:
            i = i + 1
        elif j <= max - 2:
            j = j + 1
        else:
            if t == 1:
                j = j + 1
            else:
                i = i + 1

        result.append((i, j))
        o = o + 1
    return result
